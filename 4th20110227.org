Chap6

* 6.3
** 6.3.2
どんな道具を用意すればいいんだっけ?

De Bruijn's index
 - terms
 - context
 - shifting
 - substitution

De Bruijn's level
 - terms
 - context
 - shifting
 - substitution

*** terms
そのままで良いような……
n は free variables の数なんだし.

*** context
これもそのままかな.
使い方がちょっと違うけど.

6.1.5 相当の話を一度しないとかな?

Г = {a, b, c}
rm(^x. (^y. x y) x)

Г = {x, a, b, c}
^. rm((^y. x y) x)

Г = {x, a, b, c}
^. rm(^y. x y) 0

Г = {x, y, a, b, c}
^. (^. rm(x y)) 0

Г = {x, y, a, b, c}
^. (^. 0 1) 0


Г = {x, y, a, b, c}
current depth = 0
re(^. (^. 0 1) 0)

Г = {x, y, a, b, c}
current depth = 1
^x. re(^. 0 1) x

Г = {x, y, a, b, c}
current depth = 1
^x. (^y. x y) x


*** shifting
↑_c^d: c 未満のところは束縛変数, それらとぶつからないように shift する.


*** substitution
(^x. ^y. x y) ^x. x
= ^y. (^x. x) y

これを de Bruijn level で.

(^. ^. 0 1) ^. 0
= ^. (^. 0) 0

最後に down shift が要りそう.
問題は変数束縛だが.

(^x. ^y. x y) ^x. y
= ^z. (^x. y) z

(^. ^. 0 1) ^. 1
= ^. (^. 2) 0

代入される側の up shift が最初に必要.
それは一緒か.

(^. ^. 0 1) ^. 1
= [0 -> (^. 2)](^. 0 1)
= ^. [0 -> (^. 3)](0 1)
= ^. (^. 3) 1
[shift down all]
= ^. (^. 2) 0

なんか違う!!


これは register machine なの?
いや register machine の意味を取り違えてた.


要は, 束縛変数を避けて shift する必要がある.


Chap8
型を付けただけ.

* 8.2
** 8.2.2
1. t は Bool でしか有り得ない.


今日の感想
「OCaml, Haskell を習得しよう!!」
